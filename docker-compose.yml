version: "3.8"

services:
  db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    build:
      context: ../projetoRede_backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    depends_on:
      - db
    environment:
      DB_NAME: mydatabase
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_HOST: db
      DB_PORT: 5432
      CORS_ALLOWED_ORIGINS: "http://localhost,http://frontend"
      CSRF_TRUSTED_ORIGINS: "http://localhost,http://frontend"
    expose:
      - "8000"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "core.wsgi:application"]
    networks:
      - app_network

  frontend:
    build:
      context: ../projetoRede_frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    depends_on:
      - backend
    environment:
      NODE_ENV: production
    volumes:
      - ../projetoRede_frontend/dist:/usr/share/nginx/html
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ../projetoRede_frontend/dist:/usr/share/nginx/html:ro
    networks:
      - app_network

volumes:
  pgdata:
  static_volume:
  media_volume:

networks:
  app_network:
    driver: bridge
